# fa_quantification.py 與 speechocean_quantification.py 比較分析
生成時間：2025-09-06 10:53

## 共同部分

### 1. 匯入模組與依賴性
兩個檔案都包含以下共同的匯入模組：
- logging, torch, numpy, pandas
- datasets (load_from_disk)
- typing (List, Dict, Any)
- ctc_segmentation
- transformers (Wav2Vec2Processor, Wav2Vec2ForCTC, Wav2Vec2CTCTokenizer)
- tqdm, csv, os, socket, datetime

### 2. 日誌配置
兩個檔案都將日誌級別配置為 INFO 並建立日誌實例。

### 3. 核心模型初始化
兩個檔案都有 `initialize_model()` 函數，功能包括：
- 從預訓練路徑載入 Wav2Vec2 處理器、分詞器和模型
- 將模型移動到指定設備
- 返回處理器、分詞器、模型的元組

### 4. 主要對齊函數結構
兩個檔案都有 `align_phonemes_with_ctc_frames()` 函數，功能包括：
- 接收 audio、phoneme_sequence、processor、tokenizer、model、samplerate、device 作為參數
- 透過 Wav2Vec2 模型處理音頻以獲得邏輯值和機率
- 返回包含音素對齊結果的字典列表

### 5. CSV 生成函數
兩個檔案都有 `create_csv_data()` 函數，功能包括：
- 批量處理資料集範例
- 使用 tqdm 顯示進度追蹤
- 將結果寫入帶有標題的 CSV 檔案
- 每個範例處理後清空 CSV 緩衝區

### 6. 主執行區塊
兩個檔案都有相似的主執行模式：
- 定義常數（SAMPLERATE=16000、模型路徑等）
- 初始化設備（如果可用則使用 CUDA）
- 呼叫系統資訊函數
- 初始化模型元件
- 從磁碟載入資料集
- 呼叫 CSV 建立函數

## 主要差異

### 1. 系統資訊函數
**fa_quantification.py：**
- 使用 time 模組的簡單 `print_system_info()`
- 返回 start_time，記錄基本系統資訊

**speechocean_quantification.py：**
- 使用 datetime 的更詳細 `print_system_info()`
- 包含主機名稱、FQDN、機器架構
- 有額外的 `extract_phoneme_accuracies()` 輔助函數

### 2. 核心演算法方法
**fa_quantification.py：**
- 直接使用提供的音素分段（幀索引）
- 沒有 CTC 分段演算法 - 假設分段已預先計算
- 更全面的熵計算（Shannon、Rényi、Tsallis）
- 溫度縮放 softmax 功能
- 邏輯值正規化函數

**speechocean_quantification.py：**
- 使用 CTC 分段演算法來計算對齊
- 實作完整的 CTC 分段工作流程
- 專注於基於邏輯值的指標（max_logit、mean_logit_margin、logit_variance）
- 包含帶有 alpha 權重的 combined_score 計算

### 3. 指標計算
**fa_quantification.py 指標：**
- posterior_prob_standard（最大機率）
- posterior_prob_temp（溫度縮放）
- max_logit
- logit_margin（前兩個邏輯值的差異）
- entropy、renyi_entropy、tsallis_entropy（聚合）

**speechocean_quantification.py 指標：**
- prosetrior_probability（平均機率）
- max_logit
- mean_logit_margin
- logit_variance
- combined_score（加權組合）

### 4. 函數參數
**fa_quantification.py：**
- 接受 `phoneme_segments` 參數（List[Tuple[int, int]]）
- 有 `temperature` 和 `aggregation_method` 參數
- 在 typing 中包含 Tuple 匯入

**speechocean_quantification.py：**
- 沒有 phoneme_segments 參數 - 計算自己的分段
- 有用於組合評分的 `alpha` 參數
- 沒有溫度或聚合參數

### 5. CSV 標題和輸出
**fa_quantification.py CSV 欄位：**
- uttid、actual_phoneme、mispronounced_phoneme
- start_frame、end_frame
- posterior_prob_standard、posterior_prob_temp
- max_logit、logit_margin、entropy、renyi_entropy、tsallis_entropy
- mispronounced

**speechocean_quantification.py CSV 欄位：**
- uttid、actual_phoneme、mispronounced_phoneme
- start_time、end_time、confidence
- prosetrior_probability、max_logit、mean_logit_margin
- logit_variance、combined_score、phoneme_accuracy
- mispronounced

### 6. 資料處理差異
**fa_quantification.py：**
- 使用打亂的資料子集（seed=50，選擇 2 個範例）
- 期望資料集中有 phoneme_segments

**speechocean_quantification.py：**
- 處理完整資料集（註解掉 shuffle/select）
- 映射 extract_phoneme_accuracies 以添加人工準確度分數
- 處理來自人工評估者的 phoneme_accuracies

### 7. 檔案路徑和常數
不同的預設路徑：
- DS_CACHE_PATH
- DATA_PATH
- CSV_OUTPUT

## 總結

fa_quantification.py 似乎是為已知音素分段的情況而設計，專注於基於熵的綜合分析和溫度縮放。speechocean_quantification.py 實作完整的 CTC 分段管線，強調基於邏輯值的 GOP 評分以及與人工準確度的比較。